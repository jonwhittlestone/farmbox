name: Continuous Integration and Delivery

on: [push]

env:
  WEB_IMAGE: docker.pkg.github.com/$GITHUB_REPOSITORY/web
  NGINX_IMAGE: docker.pkg.github.com/$GITHUB_REPOSITORY/nginx

jobs:

  backup_prod_db:
    name: Backup Production SQLite DB to Dropbox
    runs-on: ubuntu-latest
    steps:
      - name: Exec into the running web container
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"
      - name: Run the management command for backing up
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
            docker exec -it "$(docker ps | grep farmbox_web | awk '{print $1}')" /bin/sh -c "python manage.py backup_db"
          ENDSSH
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .env
          echo FARMBOX_DROPBOX_ACCESS_TOKEN=${{ secrets.FARMBOX_DROPBOX_ACCESS_TOKEN }} >> .env
          echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
      - name: Set environment variables
        run: |
          echo ::set-env name=WEB_IMAGE::${{ env.WEB_IMAGE }}
          echo ::set-env name=NGINX_IMAGE::${{ env.NGINX_IMAGE }}
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.WEB_IMAGE }} || true
          docker pull ${{ env.NGINX_IMAGE }} || true
      - name: Build images
        run: |
          docker-compose -f docker-compose.ci.yml build
      - name: Push images
        run: |
          docker push ${{ env.WEB_IMAGE }}

  deploy:
      name: Deploy to DigitalOcean
      runs-on: ubuntu-latest
      needs: build
      if: github.ref == 'refs/heads/master'
      steps:
        - name: Checkout master
          uses: actions/checkout@v1
        - name: Add environment variables to .env
          run: |
            echo DEBUG=1 >> .env
            echo FARMBOX_DROPBOX_ACCESS_TOKEN=${{ secrets.FARMBOX_DROPBOX_ACCESS_TOKEN }} >> .env
            echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
            echo WEB_IMAGE=${{ env.WEB_IMAGE }} >> .env
            echo NGINX_IMAGE=${{ env.NGINX_IMAGE }} >> .env
        - name: Add the private SSH key to the ssh-agent
          env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          run: |
            mkdir -p ~/.ssh
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"
        - name: Build and deploy images on DigitalOcean
          env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          run: |
            scp  -o StrictHostKeyChecking=no -r ./.env ./docker-compose.prod.yml root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/farmbox
            ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
              cd /farmbox
              source .env
              docker login docker.pkg.github.com -u jonwhittlestone -p {{ secrets.DEPLOY_PAT }}
              echo $WEB_IMAGE
              # echo $NGINX_IMAGE
              docker pull $WEB_IMAGE
              # docker pull $NGINX_IMAGE
              docker-compose -f docker-compose.prod.yml up -d
            ENDSSH
